package com.example.dermtect.ui.screens

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import com.example.dermtect.ui.components.BackButton

@Composable
fun AboutScreen(navController: NavController) {
    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(Color(0xFFF5F5F5)) // fallback background
    ) {
        // Cyan background rectangle
        Box(
            modifier = Modifier
                .fillMaxSize()
                .clip(RoundedCornerShape(20.dp))
                .background(Color(0xFFCDFFFF))
        )

        Box(
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 50.dp, start = 23.dp)
        ) {
            BackButton(
                onClick = { navController.popBackStack() },
                modifier = Modifier.align(Alignment.CenterStart)
            )
        }

        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(top = 80.dp, start = 20.dp, end = 20.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            // About title (not bold)
            Text(
                text = "About",
                style = MaterialTheme.typography.headlineSmall.copy(
                    color = Color(0xFF1D1D1D),
                    fontWeight = FontWeight.Normal
                )
            )

            Spacer(modifier = Modifier.height(15.dp))

            Card(
                modifier = Modifier
                    .wrapContentHeight(),
                shape = RoundedCornerShape(10.dp),
                colors = CardDefaults.cardColors(containerColor = Color.White)
            ) {
                Column(
                    modifier = Modifier
                        .padding(20.dp)
                        .verticalScroll(rememberScrollState()),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text(
                        text = """
DermTect is a mobile app designed to help people check their skin for early signs of skin cancer. It works by allowing users to take a clear photo of a mole, spot, or unusual mark on their skin using their phone’s camera. Once the photo is taken, the app analyzes the image and lets the user know if the skin spot looks like it could be cancerous or not.

The goal of DermTect is not to replace a doctor, but to give users an easy way to monitor their skin health, especially if they notice something new or unusual. By providing quick feedback, the app encourages users to be more aware of changes in their skin and to seek medical advice from a dermatologist if anything seems suspicious.

Early detection can make a big difference, and DermTect aims to make that first step simple and accessible for everyone.

Credits:
International Skin Imaging Collaboration. SLICE-3D 2024 Challenge Dataset. International Skin Imaging Collaboration https://doi.org/10.34970/2024-slice-3d

The dataset was generated by the International Skin Imaging Collaboration (ISIC) and images are from the following sources: Hospital Clínic de Barcelona, Memorial Sloan Kettering Cancer Center, Hospital of Basel, FNQH Cairns, The University of Queensland, Melanoma Institute Australia, Monash University and Alfred Health, University of Athens Medical School, and Medical University of Vienna.
""".trimIndent(),
                        fontSize = 14.sp,
                        color = Color(0xFF484848),
                        lineHeight = 20.sp,
                        textAlign = TextAlign.Center,
                        fontWeight = androidx.compose.ui.text.font.FontWeight.Normal
                    )
                }
            }
        }
    }
}

@Composable
fun TermsPrivacyScreen(navController: NavController) {
    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(Color(0xFFF5F5F5)) // fallback bg
    ) {
        // Cyan background
        Box(
            modifier = Modifier
                .fillMaxSize()
                .clip(RoundedCornerShape(20.dp))
                .background(Color(0xFFCDFFFF))
        )

        // Back
        Box(
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 50.dp, start = 23.dp)
        ) {
            BackButton(
                onClick = { navController.popBackStack() },
                modifier = Modifier.align(Alignment.CenterStart)
            )
        }

        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(top = 80.dp, start = 20.dp, end = 20.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            // Title (not bold, to match About)
            Text(
                text = "Terms & Privacy Policy",
                style = MaterialTheme.typography.headlineSmall.copy(
                    color = Color(0xFF1D1D1D),
                    fontWeight = FontWeight.Bold
                )
            )

            Spacer(modifier = Modifier.height(15.dp))

            Card(
                modifier = Modifier.wrapContentHeight(),
                shape = RoundedCornerShape(10.dp),
                colors = CardDefaults.cardColors(containerColor = Color.White)
            ) {
                Column(
                    modifier = Modifier
                        .padding(20.dp)
                        .verticalScroll(rememberScrollState()),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text(
                        text = """
DermTect – Terms & Privacy Policy

1. Commitment to Privacy
DermTect is dedicated to protecting your privacy. We collect only the information necessary to provide accurate results, improve our services, and support your health journey.

2. Information We Collect
• Skin photos you upload for analysis
• Reports generated by the app
We do not collect information from your other apps, websites, or outside sources.

3. How We Use Your Information
Your data is used to:
• Analyze skin photos and generate assessment results
• Provide dermatologist feedback when applicable
• Improve the accuracy and quality of DermTect’s features

4. Data Security
All photos, reports, and details are stored securely. We apply strict technical and organizational measures to protect your data against unauthorized access, loss, or misuse.

5. Sharing of Information
We do not sell, rent, or share your personal information with third parties. Information may only be shared with licensed healthcare professionals strictly for medical review or consultation purposes, and only when necessary to support your use of DermTect.

6. Your Control and Consent
You have full control over your data. You may withdraw consent, deactivate your account, or request removal of your stored information at any time.

7. Updates to Policy
We may update these Terms & Privacy Policy from time to time to improve our services or comply with legal requirements. Any significant changes will be communicated within the app.

8. Agreement
By using DermTect, you confirm that you have read and understood these Terms & Privacy Policy, and you consent to the responsible use of your information as described above.
""".trimIndent(),
                        fontSize = 14.sp,
                        color = Color(0xFF484848),
                        lineHeight = 20.sp,
                        textAlign = TextAlign.Start, // policy reads better left-aligned
                        fontWeight = FontWeight.Normal
                    )
                }
            }
        }
    }
}